This directory contains this project's C implementation.

------------------------
DEPENDENCIES
------------------------

To build it, you will need to install the following:

* CMake
* GNU Multiple Precision Library (GMP)

On Ubuntu and other Debian-based distributions, the following command will install both:
sudo apt-get install cmake libgmp-dev

On CentOS and other Red Hat-based distributions, the following command will install both:
sudo yum install cmake gmp-devel

On other UNIX-like platforms, both of these projects are likely included in their respective package distribution systems.

Note that this implementation does not work on Windows platforms.

------------------------
BUILD INFORMATION
------------------------

Once everything is installed, run the following commands to build the utilities:

mkdir build
cd build
cmake ..
make

------------------------
RUNNING UTILITIES
------------------------

To run the key generation utility, run the program as follows (from your build directory), substituting your own files:

keygen/rsa-keygen-c (private key filename) (public key filename)

To run the encryption/decryption utility, run the program as follows:

To encrypt: msg-crypt/rsa-c -e -i (input file) -o (output encrypted file) -k (public key file)
To decrypt: msg-crypt/rsa-c -d -i (input encrypted file) -o (output file) -k (private key file)

------------------------
GMP API INFORMATION
------------------------

This implementation uses GMP for its bigint storage and calculations. While I have made sure to comment
code that uses GMP as much as is reasonable, more information can be found here:

Initialization:    http://web.mit.edu/gnu/doc/html/gmp_3.html
Integer Functions: http://web.mit.edu/gnu/doc/html/gmp_4.html
